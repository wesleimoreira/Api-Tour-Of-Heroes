<?xml version="1.0"?>
<doc>
    <assembly>
        <name>App-Tour-Of-Heroes-Apresentation</name>
    </assembly>
    <members>
        <member name="M:App_Tour_Of_Heroes_Apresentation.Controllers.HeroController.GetAllAsync">
            <summary>
            Obter todos os hérois
            </summary>   
            <returns> retorna uma lista de hérois </returns>
            <response code="200"> retorna os hérois encontrados </response>        
            <response code="404"> Há lista de hérois esta vazia </response>
        </member>
        <member name="M:App_Tour_Of_Heroes_Apresentation.Controllers.HeroController.GetByIdAsync(System.Int32)">
            <summary>
            Obter um héroi por identificador
            </summary>
            <param name="id"></param>    
            <returns> retorna um héroi expecifico </returns>
            <response code="200"> retorna o héroi </response>        
            <response code="404"> O héroi não foi encontrado </response>
        </member>
        <member name="M:App_Tour_Of_Heroes_Apresentation.Controllers.HeroController.CreateAsync(System.String)">
            <summary>
            create a hero
            </summary>
            <param name="name"></param>    
            <returns> retorna o héroi criado </returns>
            <response code="200"> retorna o héroi criado </response>        
            <response code="404"> O héroi não foi criado </response>
        </member>
        <member name="M:App_Tour_Of_Heroes_Apresentation.Controllers.HeroController.UpdateAsync(Api_Tour_Of_Heroes_Application.ViewModels.HeroViewModel)">
            <summary>
            Update a hero
            </summary>
            <param name="model"></param> 
            <returns> retorna o héroi atualizado </returns>
            <response code="200"> retorna o héroi atualizado </response>        
            <response code="404"> O héroi não foi encontrado </response>
        </member>
        <member name="M:App_Tour_Of_Heroes_Apresentation.Controllers.HeroController.DeleteAsync(System.Int32)">
            <summary>
            remove um héroi da lista
            </summary>
            <param name="id"></param>    
            <returns> O identificador do héroi removido </returns>
            <response code="200"> héroi removido com sucesso </response>        
            <response code="404"> Não foi encontrado o héroi </response>
        </member>
        <member name="M:App_Tour_Of_Heroes_Apresentation.Controllers.LoginController.AuthenticateAsync(System.String,System.String)">
            <summary>
            Returns a list of User
            </summary>      
            <returns> Retorna o token para autenticação </returns>
            <response code="200"> Retorna um token </response>        
            <response code="404"> Não possui o usuário </response>
        </member>
        <member name="M:App_Tour_Of_Heroes_Apresentation.Controllers.UserController.GetAllAsync">
            <summary>
            Returns a list of User
            </summary>      
            <returns> retorna uma lista de usuários </returns>
            <response code="200"> Retorna a lista </response>        
            <response code="404"> Não possui usuários cadastrados </response>
        </member>
        <member name="M:App_Tour_Of_Heroes_Apresentation.Controllers.UserController.GetByIdAsync(System.Int32)">
            <summary>
            Returns a User by id
            </summary>
            <param name="id"></param>     
            <returns> retorna o usuário solicitado </returns>
            <response code="200"> retorna o usuário </response>        
            <response code="404"> Não possui usuários cadastrados </response>
        </member>
        <member name="M:App_Tour_Of_Heroes_Apresentation.Controllers.UserController.CreateAsync(System.String,System.String,System.String)">
            <summary>
            create a User
            </summary>
            <param name="userName"></param>
            <param name="password"></param>
            <param name="role"></param>   
            <returns> retorna o usuário cadastrado </returns>
            <response code="200"> usuário cadastrado</response>        
            <response code="404"> Não foi possivel cadastrar o usuário </response>
        </member>
        <member name="M:App_Tour_Of_Heroes_Apresentation.Controllers.UserController.UpdateAsync(Api_Tour_Of_Heroes_Application.ViewModels.UserViewModel)">
            <summary>
            Update a User
            </summary>
            <param name="model"></param>  
            <returns> Retorna o usuário atualizado </returns>
            <response code="200"> Retorna o usuário atualizado </response>        
            <response code="404"> O usuário não está cadastrado </response>
        </member>
        <member name="M:App_Tour_Of_Heroes_Apresentation.Controllers.UserController.DeleteAsync(System.Int32)">
            <summary>
            Remove a hero
            </summary>
            <param name="id"></param>  
            <returns> retorna o identificador do usuário deletado </returns>
            <response code="200"> Retorna o identificados </response>        
            <response code="404"> O usuário não está cadastrado </response>
        </member>
    </members>
</doc>
